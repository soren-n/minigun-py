name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install

      - name: Install dependencies
        run: uv sync --group dev --group quality

      - name: Format check
        run: uv run ruff format --check --diff minigun tests scripts

      - name: Import sort check
        run: uv run ruff check --select I minigun tests scripts

      - name: Lint check
        run: uv run ruff check minigun tests scripts

      - name: Run tests with coverage
        run: uv run coverage run -m tests.main

      - name: Coverage report
        run: uv run coverage report --show-missing --fail-under=60

  build_distribution:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install

      - name: Install dependencies
        run: uv sync

      - name: Build distribution
        run: uv build --sdist

      - name: Upload distribution
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz

  check_distribution:
    name: Check distribution
    needs: [build_distribution]
    runs-on: ubuntu-latest

    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install

      - name: Download distribution
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: ./dist

      - name: Test the distribution
        run: |
          uv venv
          find ./dist/*.tar.gz -maxdepth 1 -type f | xargs uv pip install
          uv run python -c "import minigun, sys; print(minigun.__version__); sys.exit(0)"
