name: Build and publish

on: [push, pull_request]

jobs:
  build_distribution:
    name: Build distribution

    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install

      - name: Build distribution
        run: uv build --sdist

      - name: Upload distribution
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz

  check_distribution:
    name: Check distribution

    needs: [build_distribution]
    runs-on: ubuntu-latest

    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install

      - name: Download distribution
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: ./dist

      - name: Test the distribution
        run: |
          uv venv
          find ./dist/*.tar.gz -maxdepth 1 -type f | xargs uv pip install
          cd ..
          uv run python -c "import minigun, sys; print(minigun.__version__); sys.exit(0)"

      - name: Check README rendering for PyPI
        run: twine check dist/*

  test_publish:
    name: Test publish version

    needs: [check_distribution]
    runs-on: ubuntu-latest

    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install

      - name: Download distribution
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: ./dist

      - name: Publish to test PyPI
        run: uv publish -t ${{ secrets.TEST_PYPI_API_TOKEN }} --repository-url https://test.pypi.org/legacy/ --skip-existing

  publish:
    name: Publish version
    if: |
      github.repository == 'soren-n/minigun-py' &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')

    needs: [test_publish]
    runs-on: ubuntu-latest

    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install

      - name: Download wheel
        uses: actions/download-artifact@v4
        with:
          name: wheel
          path: ./dist

      - name: Publish to PyPI
        run: uv publish -t ${{ secrets.PYPI_API_TOKEN }}