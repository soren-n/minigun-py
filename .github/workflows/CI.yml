name: Build and publish

on: [push, pull_request]

jobs:
  build_wheel:
    name: Build wheel

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Python version
        uses: actions/setup-python@v3
        with:
          python-version: 3.x

      - name: Install dependencies
        run: python -m pip install wheel

      - name: Build wheel
        run: python setup.py bdist_wheel

      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: ./dist/*.whl

  build_sdist:
    name: Build sdist

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Python version
        uses: actions/setup-python@v3
        with:
          python-version: 3.x

      - name: Build sdist
        run: python setup.py sdist

      - name: Test the sdist
        run: |
          python -m pip install dist/*.gz
          python -m pip install -r requirements.txt
          cd ..
          python -c "import minigun, sys; print(minigun.__version__); sys.exit(0)"

      - name: Check README rendering for PyPI
        run: |
          python -m pip install twine
          twine check dist/*

      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: ./dist/*

  publish:
    name: Publish version
    if: >-
      github.repository == 'soren-n/minigun-py' &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')

    needs: [build_wheel, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - name: Download wheel and sdist
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: ./dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}