# Pre-commit hooks configuration
# Install with: uv run pre-commit install
# For full setup: uv run pre-commit install --hook-type pre-commit --hook-type pre-push --hook-type commit-msg

# Configure default hook types and language versions
default_install_hook_types: [pre-commit, pre-push, commit-msg]
default_language_version:
    python: python3.12

# Fail fast - stop at first failure
fail_fast: true

repos:
  # Standard pre-commit hooks for basic file hygiene
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: no-commit-to-branch
        args: ['--branch', 'main', '--branch', 'master']

  # Ruff - extremely fast Python linter and formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.9
    hooks:
      - id: ruff-check
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  # MyPy type checking (temporarily disabled due to internal error)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.15.0
    hooks:
      - id: mypy
        exclude: ^(tests/|scripts/)
        # Skip mypy temporarily due to internal error - will be re-enabled when fixed
        stages: [manual]

  # Local project-specific hooks
  - repo: local
    hooks:
      # Individual quality checks for better granularity and speed

      # Format check (pre-commit stage - dry run)
      - id: format-check
        name: Format Check (Ruff)
        entry: uv run ruff format --check --diff
        language: system
        types: [python]
        stages: [pre-commit]
        args: [minigun, tests, scripts]
        pass_filenames: false

      # Import sorting check (pre-commit stage)
      - id: import-sort-check
        name: Import Sort Check (Ruff)
        entry: uv run ruff check --select I
        language: system
        types: [python]
        stages: [pre-commit]
        args: [minigun, tests, scripts]
        pass_filenames: false

      # Lint check (pre-commit stage)
      - id: lint-check
        name: Lint Check (Ruff)
        entry: uv run ruff check
        language: system
        types: [python]
        stages: [pre-commit]
        args: [minigun, tests, scripts]
        pass_filenames: false

      # Type checking (pre-push stage - more comprehensive)
      - id: type-check-local
        name: Type Check (MyPy)
        entry: uv run mypy
        language: system
        types: [python]
        args: [minigun]
        pass_filenames: false
        # Skip temporarily due to mypy internal error
        stages: [manual]

      # Run tests with coverage (pre-push stage)
      - id: test-coverage
        name: Tests with Coverage
        entry: uv run coverage run -m minigun.cli --time-budget 60
        language: system
        always_run: true
        pass_filenames: false
        stages: [pre-push]

      # Coverage report (pre-push stage)
      - id: coverage-report
        name: Coverage Report
        entry: uv run coverage report --show-missing --fail-under=60
        language: system
        always_run: true
        pass_filenames: false
        stages: [pre-push]

      # Emoji scanner (optional, manual stage)
      - id: emoji-scan
        name: Emoji Scanner
        entry: uv run python scripts/emoji_scanner.py
        language: system
        always_run: true
        pass_filenames: false
        stages: [manual]
        args: [.]

# CI configuration for pre-commit.ci
ci:
    autofix_commit_msg: |
        [pre-commit.ci] auto fixes from pre-commit.com hooks

        for more information, see https://pre-commit.ci
    autofix_prs: true
    autoupdate_branch: ''
    autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
    autoupdate_schedule: weekly
    skip: [mypy, type-check-local, emoji-scan]  # Skip resource-intensive and optional hooks in CI
    submodules: false
